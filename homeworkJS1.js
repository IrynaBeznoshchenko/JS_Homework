1)  'number' + 3 + 3              /*'number33'       'number'+3 =''number3'(рядок + число =рядок).'number3'+3 ='number33'(рядок + число = рядок)*/
                                                     
2)  null + 3                      /* 3                null при виконання арифметичних дій перетворюється на 0, тому 0+3 =3 */

3)  5 && "qwerty"                 /* "qwerty"         Оператор && повертає перший falsy операнд, або якщо обидва truthy,то повертає останній.5 — це truthy."qwerty" також truthy.Обидва значення truthy,отже, && повертає останній truthy операнд */

4)  +'40' + +'2' + "hillel";      /* "42hillel"       Унарний плюс перетворює рядок '40' в число 40. Далі унарний плюс перетворює рядок '2' в число 2. Виконуємо арифметичну дію 40+2 =42. А далі 42 + "hillel" → "42hillel" (число + рядок = рядок) */

5)  '10' - 5 === 6;               /* false            Рядок '10' перетворюється на 10. 10 - 5 = 5. Оператор === перевіряє строгу рівність.5 не дорівнює числу 6, тому результат false */

6)  true + false                  /* true              true - 1, false - 0. 1 + 0 = 1 - true*/

7)  '4px' - 3                     /* NaN               '4px' неможливо перетворити в рядок, тому буде NaN.Будь-яка арифметична операція з NaN повертає NaN. NaN - 3 буде NaN */

8)  '4' - 3                       /* 1                  Рядок '4' за допомогою операнду - перетворюється в число 4. 4-3 = 1 */

9)  '6' + 3 ** 0;                 /* '61'               Спочатку обчислюється 3 ** 0, оскільки піднесення до ступеня має вищий пріорітет.Будь-яке число (крім нуля) у степені 0 дорівнює 1 за математичними правилами. Отже, 3 ** 0 = 1.Оператор + може виконувати додавання чисел або конкатенацію рядків. Якщо хоча б один з операндів є рядком, то відбувається конкатенація (об'єднання рядків).У цьому випадку '6' — це рядок, а 1 — число, тому 1 перетворюється на рядок '1'.'6' + '1' = '61'. */

10)  12 / '6'                     /* 2                  Тут операнд ділення перетворює рядок на число перед виконанням арифметичної операції. Отже, 12/6 = 2 */

11)  '10' + (5 === 6);            /* '10false'          Оператор === перевіряє строгу рівність, число 5 не дорівнює 6 тому тут виходить false. Якщо один з операндів рядок, то інший також перетворюється на рядок.Таким чином '10' + 'false' -> '10false'*/

12)  null == ''                   /* false              Бо null не прирівнюється до порожнього рядка, навіть у нестрогому порівнянні.*/

13)  3 ** (9 / 3);                /* 27                 Спочатку обчислюємо вираз в дужках,9/3= 3.Оператор ** — це піднесення до степеня.3 ** 3 = 3 × 3 × 3 = 27 */

14)  !!'false' == !!'true'        /* true               !!'false' буде true, оскільки false це не порожній рядок.!!'true' буде true.true == true  буде true */

15)  0 || '0' && 1                 /* 1 (true)          Оператор && має вищий пріоритет, тому спочатку виконуємо дію '0' && 1 .'0' — це непорожній рядок, отже truthy,1 — це число, також truthy.Оператор && повертає останнє значення, якщо обидва truthy. Далі виконуємо дію  0 || 1. 0 — це falsy, 1 — це truthy. Оператор || повертає перше truthy значення, або останнє, якщо всі falsy, отже буде 1 (true ) */

16)  (+null == false) < 1;         /* false             Спочатку виконуємо дії в дужках,+ — це унарний плюс, який перетворює значення на число. Тобто виходить (0 == false) < 1.0 == false -> true, тому що false - 0, а 0 == 0 -> true. Тепер маємо вираз true < 1. true перетворюється в 1, отже маємо вираз 1 < 1, що є хибним, тобто  false*/

17)  false && true || true         /* true              Оператор && має вищий пріоритет, тому спочатку виконуємо  false && true -> false. false || true -> true */

18)  false && (false || true);     /* false             Спочатку дії в дужках false || true -> true.false && true -> false */ 

19)  (+null == false) < 1 ** 5;    /* false             Спочатку виконуємо дії в дужках,+ — це унарний плюс, який перетворює значення на число. Тобто виходить (0 == false).0 == false -> true, тому що false - 0, а 0 == 0 -> true. Обчислюємо степінь 1 ** 5 -> 1. (true) < 1. У порівняннях JavaScript перетворює true на число 1.отже 1 < 1 -> false*/

